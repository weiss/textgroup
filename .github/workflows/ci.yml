name: CI

on:
  push:
    paths-ignore:
      - '*.md'
  pull_request:
    paths-ignore:
      - '*.md'

jobs:
  test:
    name: Test on Erlang/OTP ${{matrix.otp}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp:
          - '23.0'
          - '24.3'
        include:
          - otp: '23.0'
            rebar: '3.18.0'
          - otp: '24.3'
            rebar: '3.18.0'
      fail-fast: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Cache Rebar data
        uses: actions/cache@v2
        with:
          path: ~/.cache/rebar3
          key: ${{runner.os}}-${{matrix.otp}}-${{matrix.rebar}}-${{hashFiles('rebar.config')}}
      - name: Download Erlang/OTP ${{matrix.otp}} and Rebar ${{matrix.rebar}}
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          rebar3-version: ${{matrix.rebar}}
          version-type: strict
      # Until https://github.com/erlware/relx/issues/905 is fixed:
      - name: Create Erlang cookie
        run: erl -noinput -sname cookie -eval 'halt()'
      - name: Download previous test results
        run: |
          mkdir -p _build/test
          curl -sSL https://github.com/weiss/textgroup/tarball/gh-pages |
            tar -C _build/test --strip-components=1 --wildcards -xzf - '*/logs/'
      - name: Download dependencies
        run: rebar3 get-deps
      - name: Compile code
        run: rebar3 compile
      - name: Build release
        run: rebar3 release
      - name: Start release
        run: _build/default/rel/textgroup/bin/textgroup daemon
      - name: Ping release
        run: _build/default/rel/textgroup/bin/textgroup ping
      - name: Stop release
        run: _build/default/rel/textgroup/bin/textgroup stop
      - name: Analyze cross references
        run: rebar3 xref
      - name: Perform static code analysis
        run: rebar3 dialyzer
      - name: Run Common Test (CT) suite
        run: rebar3 ct
      - name: Check test coverage
        run: rebar3 cover
      - name: Check code style
        run: rebar3 lint
      - name: Generate documentation
        run: rebar3 edoc
      - name: Collect web pages
        run: |
          mkdir public
          cp -a doc/* _build/test/logs _build/test/cover public
      - name: Upload web pages
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: textgroup-html-otp-${{matrix.otp}}
          path: public
  publish:
    name: Publish documentation and test results
    runs-on: ubuntu-latest
    needs: test
    if: github.repository_owner == 'weiss' && always()
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Retrieve web pages
        uses: actions/download-artifact@v3
        with:
          name: textgroup-html-otp-24.3
          path: public
      - name: Deploy web site to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
